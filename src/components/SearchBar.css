/* .input {
    border: none;
    padding: 1rem;
    border-radius: 1rem;
    background: #fff;
    box-shadow: 0 0 1px 0 rgba(24, 94, 224, 0.15), 0 6px 12px 0 rgba(24, 94, 224, 0.15);
    transition: 0.3s;
    width: 50vw;
    margin-bottom: 50px;
}
   
.input:focus {
    outline-color: #fff;
    background: #fff;
    box-shadow: 0 0 1px 0 rgba(24, 94, 224, 0.15), 0 6px 12px 0 rgba(24, 94, 224, 0.15);
    transition: 0.3s;
}

.input[type='text'] { 
    font-family: 'Montserrat', sans-serif; 
} */

.similar-classes {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-gap: 60px;
    justify-items: center; /* Center items horizontally */
  align-items: center; /* Center items vertically */
}

.form {
    --input-bg: #FFf;
   /*  background of input */
    --padding: 1.5em;
    --rotate: 80deg;
   /*  rotation degree of input*/
    --gap: 2em;
    /*  gap of items in input */
    --icon-change-color: #15A986;
   /*  when rotating changed icon color */
    --height: 40px;
   /*  height */
    width: 200px;
    padding-inline-end: 1em;
   /*  change this for padding in the end of input */
    background: var(--input-bg);
    position: relative;
    border-radius: 25px;
    width: 90vw;
    box-shadow: 0 0 1px 0 rgba(24, 94, 224, 0.15), 0 6px 12px 0 rgba(24, 94, 224, 0.15);
    margin-top: 25px;
    margin-bottom: 25px;
  }
  
  .form label {
    display: flex;
    align-items: center;
    width: 100%;
    height: var(--height);
  }
  
  .form input {
    width: 100%;
    padding-inline-start: calc(var(--padding) + var(--gap));
    outline: none;
    background: none;
    border: 0;
    font-family: 'Montserrat', sans-serif; 
  }
  /* style for both icons -- search,close */
  .form svg {
    /* display: block; */
    color: #111;
    transition: 0.3s cubic-bezier(.4,0,.2,1);
    position: absolute;
    height: 15px;
  }
  /* search icon */
  .icon {
    position: absolute;
    left: var(--padding);
    transition: 0.3s cubic-bezier(.4,0,.2,1);
    display: flex;
    justify-content: center;
    align-items: center;
  }
  /* arrow-icon*/
  .swap-off {
    transform: rotate(-80deg);
    opacity: 0;
    visibility: hidden;
  }
  /* close button */
  .close-btn {
    /* removing default bg of button */
    background: none;
    border: none;
    right: calc(var(--padding) - var(--gap));
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #111;
    padding: 0.1em;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    transition: 0.3s;
    opacity: 0;
    transform: scale(0);
    visibility: hidden;
  }
  
  .form input:focus ~ .icon {
    transform: rotate(var(--rotate)) scale(1.3);
  }
  
  .form input:focus ~ .icon .swap-off {
    opacity: 1;
    transform: rotate(-80deg);
    visibility: visible;
    color: var(--icon-change-color);
  }
  
  .form input:focus ~ .icon .swap-on {
    opacity: 0;
    visibility: visible;
  }
  
  .form input:valid ~ .icon {
    transform: scale(1.3) rotate(var(--rotate))
  }
  
  .form input:valid ~ .icon .swap-off {
    opacity: 1;
    visibility: visible;
    color: var(--icon-change-color);
  }
  
  .form input:valid ~ .icon .swap-on {
    opacity: 0;
    visibility: visible;
  }
  
  .form input:valid ~ .close-btn {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
    transition: 0s;
  }

.ldr {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 75vh;
}

  .loader {
    display: block;
    --height-of-loader: 4px;
    --loader-color: #0071e2;
    width: 130px;
    height: var(--height-of-loader);
    border-radius: 30px;
    background-color: rgba(0,0,0,0.2);
    position: relative;

  }
  
  .loader::before {
    content: "";
    position: absolute;
    background: var(--loader-color);
    top: 0;
    left: 0;
    width: 0%;
    height: 100%;
    border-radius: 30px;
    animation: moving 1s ease-in-out infinite;
    ;
  }
  
  @keyframes moving {
    50% {
      width: 100%;
    }
  
    100% {
      width: 0;
      right: 0;
      left: unset;
    }
  }
  


  